{"ast":null,"code":"var _jsxFileName = \"/Users/mblazko-macwro/Source/family/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App, { Container } from \"next/app\";\nimport Head from \"next/head\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Nav from \"../components/Nav\";\nimport { title } from \"./_document\"; // Any global CSS variables and selectors we want\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --padding: 2rem;\n    --max-width: 50rem;\n  }\n\n  body {\n    background: var(--background--1);\n    font-family: 'PT Sans', sans-serif;\n    margin: 0;\n  }\n`;\nconst Main = styled.main`\n  margin: 0 auto;\n  max-width: var(--max-width);\n  padding: var(--padding);\n`;\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      router\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, title)), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      router: router,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }))), __jsx(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"names":["App","Container","Head","styled","createGlobalStyle","Nav","title","GlobalStyle","Main","main","MyApp","getInitialProps","Component","ctx","pageProps","render","router","props"],"sources":["/Users/mblazko-macwro/Source/family/pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\nimport Head from \"next/head\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Nav from \"../components/Nav\";\nimport { title } from \"./_document\";\n\n// Any global CSS variables and selectors we want\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --padding: 2rem;\n    --max-width: 50rem;\n  }\n\n  body {\n    background: var(--background--1);\n    font-family: 'PT Sans', sans-serif;\n    margin: 0;\n  }\n`;\n\nconst Main = styled.main`\n  margin: 0 auto;\n  max-width: var(--max-width);\n  padding: var(--padding);\n`;\n\nexport default class MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, router } = this.props;\n\n    return (\n      <>\n        <Head>\n          <title>{title}</title>\n        </Head>\n        <Container>\n          <Nav />\n          <Main>\n            <Component {...pageProps} router={router} />\n          </Main>\n          <GlobalStyle />\n        </Container>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,KAAT,QAAsB,aAAtB,C,CAEA;;AACA,MAAMC,WAAW,GAAGH,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMI,IAAI,GAAGL,MAAM,CAACM,IAAK;AACzB;AACA;AACA;AACA,CAJA;AAMA,eAAe,MAAMC,KAAN,SAAoBV,GAApB,CAAwB;EACT,aAAfW,eAAe,CAAC;IAAEC,SAAF;IAAaC;EAAb,CAAD,EAAqB;IAC/C,IAAIC,SAAS,GAAG,EAAhB;;IAEA,IAAIF,SAAS,CAACD,eAAd,EAA+B;MAC7BG,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;IACD;;IAED,OAAO;MAAEC;IAAF,CAAP;EACD;;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEH,SAAF;MAAaE,SAAb;MAAwBE;IAAxB,IAAmC,KAAKC,KAA9C;IAEA,OACE,4BACE,MAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAQX,KAAR,CADF,CADF,EAIE,MAAC,SAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,GAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAEE,MAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,SAAD,eAAeQ,SAAf;MAA0B,MAAM,EAAEE,MAAlC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GADF,CAFF,EAKE,MAAC,WAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EALF,CAJF,CADF;EAcD;;AA5BoC"},"metadata":{},"sourceType":"module"}