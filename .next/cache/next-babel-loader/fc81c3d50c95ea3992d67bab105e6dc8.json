{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App, { Container } from \"next/app\";\nimport Head from \"next/head\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Nav from \"../components/Nav\";\nimport { title } from \"./_document\"; // Any global CSS variables and selectors we want\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --padding: 2rem;\n    --max-width: 50rem;\n  }\n\n  body {\n    background: var(--background--1);\n    font-family: 'PT Sans', sans-serif;\n    margin: 0;\n  }\n`;\nconst Main = styled.main`\n  margin: 0 auto;\n  max-width: var(--max-width);\n  padding: var(--padding);\n`;\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      router\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, title)), __jsx(Container, null, __jsx(Nav, null), __jsx(Main, null, __jsx(Component, _extends({}, pageProps, {\n      router: router\n    }))), __jsx(GlobalStyle, null)));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}